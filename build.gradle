// For those who want the bleeding edge
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3.4'
    }
}

plugins {
    id 'com.gradle.build-scan' version '1.16'
    id 'com.matthewprenger.cursegradle' version '1.1.0'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

repositories {
    maven {
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url = "https://maven.k-4u.nl"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
}

def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".n" + ENV.DRONE_BUILD_NUMBER
}

group = "mcjty.theoneprobe"
archivesBaseName = "theonesmeagle"

if (System.getenv('BUILD_NUMBER') != null) {
    version += "-${System.getenv('BUILD_NUMBER')}"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = mcp_mappings
    useDepAts = true
}

dependencies {
    deobfCompile "mezz.jei:jei_${jei_version}"
    deobfCompile "cofh:RedstoneFlux:${redstoneflux_version}"

    //Gamestages stuff
    compile "net.darkhax.bookshelf:Bookshelf-1.12.2:2.3.590"
    compile "net.darkhax.gamestages:GameStages-1.12.2:2.0.123"

}

jar {
    manifest {
        attributes 'FMLAT': 'top_at.cfg'
    }
    finalizedBy 'reobfJar' // This ensures reobfuscation runs after the jar is created
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task apiJar(type: Jar) {
    classifier = "api"
    from(sourceSets.main.output) {
        include "mcjty/theoneprobe/api/**"
    }
}

artifacts {
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact apiJar
            artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        } else {
            mavenLocal()
        }
    }
}


